---
import RandomExploration from "@/assets/hero/hero-11.png";
import RandomNature from "@/assets/hero/hero-15.png";
import Segment, { type SegmentProps } from "@/components/Segment/Segment.astro";
import ColorTheme from "@/components/ui/Color/ColorTheme.astro";
import Hero from "@/components/ui/Hero/Hero.astro";
import { generateLorem } from "@/helpers";
import Footer from "@/layouts/Footer.astro";
import Header from "@/layouts/Header.astro";
import Layout from "@/layouts/Layout.astro";
import ScreenUnit from "@/layouts/ScreenUnit.astro";
import { features } from "@/shared/content";
import { wrappers } from "@/shared/screen";
import { Image } from "astro:assets";

const bezier = "cubic-bezier(.25,.75,.5,1.05)";
const duration = "0.5s";
---

<script>
  import { setupIntersectionObserver } from "@/helpers";
  // --
  const elements = Array.from(document.querySelectorAll("[data-content]")) as HTMLElement[];
  const onIntersect = (element: HTMLElement) => element.classList.add("animate-fade-in-card");

  elements.map((element) => {
    setupIntersectionObserver({
      element,
      debugLog: "image",
      onIntersect: () => onIntersect(element),
      threshold: 0.8,
    });
  });
</script>

<style define:vars={{ bezier, duration }}>
  [data-content].animate-fade-in-card {
    animation: fadeIn var(--duration) var(--bezier);
    animation-fill-mode: forwards;
  }

  [data-content] {
    opacity: 0;
    transform: scale(0.95);
    filter: blur(4px);
  }

  @keyframes fadeIn {
    to {
      opacity: 1;
      transform: scale(1);
      filter: blur(0);
    }
  }
</style>

<Layout title="Accueil">
  {
    /**
     *
     *
     *
     * Header
     *
     *
     *
     */
  }
  <Header slot="header" />
  {
    /**
     *
     *
     *
     * Hero
     *
     *
     *
     */
  }
  <Hero slot="hero" hrefs={["#features", "/activities"]} />
  <Fragment slot="main" id="main">
    {
      /**
       *
       *
       *
       * Nature & Adventure
       *
       *
       *
       */
    }

    <ColorTheme theme="light" afterHero bgName="none">
      <ScreenUnit {...wrappers.natureHeader} />
      <ScreenUnit {...wrappers.nature}>
        <div class="w-full h-[250px] flex flex-col-reverse center xmd:horizontal gap-12" data-content>
          <div class="px-3 flex flex-col h-full justify-evenly text-center xmd:text-right gap-12">
            <h4 class="dark:text-slate-200 text-slate-900 text-2xl">
              {generateLorem(3)}...
            </h4>
            <p class="text-pur-400 text-lg font-bold max-w-[60ch] text-balance">
              {generateLorem(40)}
            </p>
          </div>
          <div
            class="pb-3 xmd:pe-3 border-b-4 border-s-pur-400 xmd:border-s-4 xmd:border-s-pur-400 xmd:border-b-transparent rounded-lg"
          >
            <Image
              src={RandomNature}
              alt={"random exploration picture"}
              class={"object-cover rounded-lg h-full w-80"}
            />
          </div>
        </div>
      </ScreenUnit>
    </ColorTheme>
    {
      /**
       *
       *
       *
       * Exploration & Culture
       *
       *
       *
       */
    }

    <ColorTheme theme="dark" rotate="180deg">
      <ScreenUnit {...wrappers.explorationHeader} />
      <ScreenUnit {...wrappers.exploration}>
        <div class="w-full h-[250px] vertical center xmd:horizontal gap-12" data-content>
          <div
            class="pb-3 xmd:pe-3 border-b-4 border-e-pur-600 xmd:border-e-4 xmd:border-e-pur-600 xmd:border-b-transparent rounded-lg"
          >
            <Image
              src={RandomExploration}
              alt={"random nature picture"}
              class={" object-cover rounded-lg h-full w-80"}
            />
          </div>
          <div class="px-3 flex flex-col h-full justify-evenly text-center xmd:text-left gap-12">
            <h4 class="dark:text-slate-200 text-slate-900 text-2xl">
              {generateLorem(3)}...
            </h4>
            <p class="text-pur-600 text-lg font-bold max-w-[60ch] text-balance">{generateLorem(40)}</p>
          </div>
        </div>
      </ScreenUnit>
    </ColorTheme>
    {
      /**
       *
       *
       *
       * Cards Features
       *
       *
       *
       */
    }

    <ColorTheme theme="light" bgName="none">
      <ScreenUnit {...wrappers.featuresHeader} />
    </ColorTheme>
    <ColorTheme theme="light">
      <ScreenUnit {...wrappers.features}>
        {features.map((feature: SegmentProps<"text">, i: number) => <Segment key={i} {...feature} />)}
      </ScreenUnit>
    </ColorTheme>
    {
      /**
       *
       *
       *
       * See us
       *
       *
       *
       */
    }
    <ColorTheme theme="dark" />
    {
      /**
       *
       *
       *
       *
       *
       * Footer
       */
    }
    <ScreenUnit wrapper={{ size: "full" }} theme="dark" />
    <Footer slot="footer" />
  </Fragment>
</Layout>
