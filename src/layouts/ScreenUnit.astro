---
interface Props {
  idWrapper: string;
  idTitle: string;
  className?: string;
  title?: string;
  threshold?: number;
  children: any;
}

const { idWrapper, idTitle, className, title, threshold = 0.5 } = Astro.props;
---

<script>
  import { setupIntersectionObserver } from "@/helpers";
  // --
  const wrappers = Array.from(document.querySelectorAll("[data-is='section-unit-observer-wrapper']")) as HTMLElement[];
  const titleElements = Array.from(
    document.querySelectorAll("[data-is='section-unit-observer-title']")
  ) as HTMLHeadingElement[];

  const groupedObservers: [HTMLElement, HTMLHeadingElement][] = wrappers.map((wrapper, i) => [
    wrapper,
    titleElements[i],
  ]);

  const onIntersect = (titleElement: HTMLHeadingElement) => titleElement.classList.add("animate-slide-in");
  const onDisappear = (titleElement: HTMLHeadingElement) => titleElement.classList.remove("animate-slide-in");
  // 0.4 is the threshold where H1 dissappears in parallax => title appears
  // --
  groupedObservers.forEach((group) =>
    setupIntersectionObserver({
      element: group[0],
      debugLog: `debug-obs-title-${group[0].id}`,
      threshold: parseInt(group[0].dataset.threshold || "") || 0.4,
      onIntersect: () => onIntersect(group[1]),
      onDisappear: () => onDisappear(group[1]),
    })
  );
</script>

<style>
  .animate-slide-in {
    animation-name: slideIn;
    -moz-animation-duration: 1ms;
    animation-direction: alternate;
    animation-timeline: scroll(y);
  }

  @keyframes slideIn {
    0% {
      transform: translateY(-340px);
      opacity: 0;
      filter: blur(2px);
    }
    50% {
      filter: blur(0);
      opacity: 1;
    }
    100% {
      transform: translateY(100vh);
    }
  }
</style>

<section
  class:list={["min-h-dvh px-12 py-12 ", [className] || ""]}
  id={idWrapper}
  data-is="section-unit-observer-wrapper"
  data-threshold={threshold}
>
  {
    title && (
      <h2
        class="w-full text-right opacity-0 -z-10 dark:text-white text-black"
        id={idTitle}
        data-is="section-unit-observer-title"
      >
        {title}
      </h2>
    )
  }
  <slot />
</section>
