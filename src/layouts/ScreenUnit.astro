---
import { cn } from "@/lib/utils";
import type { Prettyfy } from "@/types";

interface Props {
  wrapper: {
    id: string;
    className?: string;
    threshold?: number;
  };
  title?: {
    text: string;
    className?: string;
    startingPos?: string;
    endingPos?: string;
    id: string;
  };

  children: any;
}

export type ScreenUnitProps = Prettyfy<Props>;

const { title, wrapper } = Astro.props;

const titleClass = cn("opacity-0 -z-10 dark:text-white text-black text-3xl", title?.className);
const wrapperClass = cn("min-h-screen px-0 py-4 md:px-12 md:py-12 gap-4 md:gap-12", wrapper?.className);
const startingPos = title?.startingPos || "-300px";
const endingPos = title?.endingPos || "0";
const bezier = "cubic-bezier(.25,.75,.5,1.05)";
---

<script>
  import { setupIntersectionObserver } from "@/helpers";
  // --
  const wrappers = Array.from(document.querySelectorAll("[data-is='section-unit-observer-wrapper']")) as HTMLElement[];
  const titleElements = Array.from(
    document.querySelectorAll("[data-is='section-unit-observer-title']")
  ) as HTMLHeadingElement[];

  const groupedObservers: [HTMLElement, HTMLHeadingElement][] = wrappers.map((wrapper, i) => [
    wrapper,
    titleElements[i],
  ]);

  const onIntersect = (titleElement: HTMLHeadingElement) => titleElement.classList.add("animate-slide-in");
  const onDisappear = (titleElement: HTMLHeadingElement) => titleElement.classList.remove("animate-slide-in");
  console.log(groupedObservers[0][0].dataset.threshold);
  groupedObservers.forEach((group) =>
    setupIntersectionObserver({
      element: group[0],
      debugLog: `debug-obs-title-${group[0].id}`,
      threshold: parseInt(group[0].dataset.threshold || "") || 0.4,
      onIntersect: () => onIntersect(group[1]),
      onDisappear: () => onDisappear(group[1]),
    })
  );
</script>

<style define:vars={{ bezier, startingPos, endingPos }}>
  h2 {
    opacity: 0;
    filter: blur(2px);
    transform: translateY(var(--startingPos)) scale(0.9);
    transition:
      transform 0.8s var(--bezier),
      opacity 0.5s var(--bezier),
      filter 0.5s var(--bezier),
      scale 0.5s var(--bezier);
  }

  h2.animate-slide-in {
    filter: blur(0);
    transform: translateY(var(--endingPos)) scale(1);
    opacity: 1;
  }
</style>

<section
  class:list={[wrapperClass]}
  id={wrapper.id}
  data-is="section-unit-observer-wrapper"
  data-threshold={wrapper.threshold || 0.4}
>
  {
    title && (
      <div class:list={["w-full flex items-center justify-center md:justify-end h-24"]}>
        <h2 class:list={[titleClass]} id={title.id} data-is="section-unit-observer-title">
          {title.text}
        </h2>
      </div>
    )
  }
  <slot />
</section>
